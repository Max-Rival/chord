syntax = "proto3";

service chordRPC {

  rpc ping (pingRequest) returns (pingResponse) {}
  rpc echo (echoRequest) returns (empty) {}
  rpc partition(partitionRequest) returns (partitionResponse) {}
  rpc merge(mergeRequest) returns (empty) {}
  rpc get (getRequest) returns (getResponse) {}
  rpc set (setRequest) returns (empty) {}
  rpc delete (deleteRequest) returns (empty) {}

  // special RPCs

  rpc getPredecessor (empty) returns (getPredecessorResponse) {}
  rpc getSuccessorList (empty) returns (getSuccessorListResponse) {}
  rpc findSuccessor (findSuccessorRequest) returns (findSuccessorResponse) {}
  rpc notify (notifyRequest) returns (empty) {}

}

message empty {}

message pingRequest {
  string sender = 1;
}

message pingResponse {
  string sender = 1;
}

message echoRequest {
  string message = 1;
  string sender = 2;
}

message partitionRequest {
  bytes lower = 1; // lower bound identifier
  bytes upper = 2; // upper bound identifier
}

message entry {
  bytes id = 1;
  bytes value = 2;
}

message partitionResponse {
  repeated entry entries = 1;
}

message mergeRequest {
  repeated entry entries = 1;
}

message getRequest {
  bytes id = 1;
}

message getResponse {
  bytes value = 1;
}

message setRequest {
  bytes id = 1;
  bytes value = 2;
}

message deleteRequest {
  bytes id = 1;
}

// special RPCs

message getPredecessorResponse {
  string address = 1;
}

message getSuccessorResponse {
  string address = 1;
}

message getSuccessorListResponse {
  repeated string addresses = 1;
}

message findSuccessorRequest {
  bytes id = 1;
}

message findSuccessorResponse {
  string address = 1;
}

message notifyRequest {
  string sender = 1;
}
