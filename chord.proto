syntax = "proto3";

service chordRPC {
  rpc echoPeer (echoPeerRequest) returns (Empty) {}
  rpc pingPeer (B) returns (B) {}
  rpc getPredecessor (Empty) returns (getPredecessorResponse) {}
  rpc getSuccessor (Empty) returns (getSuccessorResponse) {}
  rpc findSuccessor (X) returns (Z) {}
  rpc notifySuccessor (notifySuccessorRequest) returns (Empty) {}
  rpc getKey (X) returns (Y) {}
  rpc setKey (Y) returns (Y) {}
  rpc moveKey(Y) returns (Y) {} 
}

message A {
  string msg = 1;
}

message B {
  int64 secs = 1;
  int32 nans = 2;
}

message X {
  bytes hash = 1;
}

message Y {
  bytes hash = 1;
  bytes val = 2;
}

message Z {
  string addr = 1;
}

message Empty {}

message echoPeerRequest {
  string msg = 1;
  string addr = 2;
}

message getPredecessorResponse {
  string addr = 1;
}

message getSuccessorResponse {
  string addr = 1;
}

message notifySuccessorRequest {
  string addr = 1;
}
